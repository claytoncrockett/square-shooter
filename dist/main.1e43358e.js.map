{"version":3,"sources":["src/spaceShip.js","src/input.js","src/projectile.js","src/enemy.js","src/score.js","src/powerup.js","src/main.js"],"names":["SpaceShip","gameWidth","gameHeight","paused","width","height","xSpeed","initialX","initialY","horizontalVelocity","position","x","y","ctx","fillStyle","fillRect","InputHandler","spaceShip","keysPressed","pauseGame","currentlyPaused","document","addEventListener","event","code","type","moveLeft","moveRight","Projectile","velocity","Enemy","Math","random","healthPoints","pointsForKilling","currentColor","Score","currentScore","font","fillText","playerScore","PowerUp","radius","beginPath","arc","PI","fill","canvas","getElementById","getContext","GAME_WIDTH","GAME_HEIGHT","startingGameTime","scoreBoard","shootingAllowed","enemySpawnInterval","timeToSpawnNextEnemy","powerUpSpawnInterval","timeToSpawnNextPowerUp","reloadTime","projectileList","powerUpList","enemyList","startGame","gameLoop","handleBullets","shootProjectile","setTimeout","i","length","checkForCollisionWithEnemy","splice","draw","update","projectile","enemyY","projectileY","enemyX","projectileX","takeDamage","handleEnemies","handlePowerups","console","log","push","maybeSpawnEnemy","currentTime","spawnEnemy","maybeSpawnPowerUp","spawnPowerUp","timestamp","clearRect","requestAnimationFrame"],"mappings":";;AMAA;;AACA;;AACA;;AACA;ILHqBgB,eACnB,sBAAYC,SAAZ,EAAuBC,WAAvB,EAAoCC,SAApC,EAA+CC,eAA/C,EAAgE;AAAA,AKGlE;;ALFIC,AKGJ,ELHIA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqC,UAAAC,KAAK,EAAI;AAC5C,IEHeO,AEAAW,AHAAb,AEAAQ,AJAApC,QCGPuB,KAAK,CAACC,IAAd;AACE,WAAK,OAAL;AACE;AEJR,AFKQN,AKCV,ADNE,AHAA,AEAA,AJAA,QCKQA,SELIjB,ACAAA,EHKO,AILPA,CJKQsB,CDLRtB,CEAAgB,GDKa,CELzB,AFK0BO,AGL1B,EDAuBtB,AEAvB,ADAuB,EHKJ,AILI,ALAvB,CCKQ,ACLR,CFAuBA,CEAA,CDKWqB,IELlC,CFKuC,CELJ,AFKKE,EDLxC,ECKkC,ADLCtB,KCKc,CDLjD,EAA2C,MCKnC;AEL2B,AFM3B,AKCV,ADPyB,AHAA,AEAA,AJAoB,IMOzC4C,MAAM,GAAG1B,QAAQ,CAAC2B,cAAT,CAAwB,YAAxB,CAAb;AACA,IAAInC,GAAG,GAAGkC,MAAM,CAACE,UAAP,CAAkB,IAAlB,CAAV,EAEA;AHTI,AFMI,AINJ,AHAA,AEAA,AJAA,SGAK7C,AEAAsC,AHAAtC,AEAAA,AJAAH,ECMI,GENT,ADAA,AEAA,CCAA,EFAa,AFMT,ACNS,AEAA,CCAC,ALAd,CGAA,ADAA,CGAA,ADAA,CJAiBA,SAAjB;AGCA,AFMI,AKGR,ADRI,AHDA,AEAA,AJAA,IMSEiD,KHTG7C,AECAE,AHDAF,AEAAA,AJAAH,ECMI,GKGG,CHTZ,ADAA,AEAA,EESe,ADRf,CFDc,ADAA,AEAA,CJAd,CGAA,AGSJ,ADRoB6B,AHDhB,AEAA,CDFiC,CAGjC,AFKI,ADNc7B,EKCE,CAAC8B,MAAL,CLDhB,KKCiC/B,SAAS,GAAG,KAAKyC,MAAlC,CAAhB;AJMM,AKGV,ADRI,AHDA,AEAA,AJAA,IMSES,KDRG3C,AHDAD,AEAA8B,AJAAjC,GCMK,CAACgB,CDNX,CMSa,EDRb,AHDA,AFAa,CMSG,CNThB,CKCgB,AHDAH,CISpB,ADRqB,ADDjB,EEWJ,ADVI,CDDoB,CAApB,GHM0B,CCND,CDMnB,ACNoBP,EDMIO,MCNd,CAAmBN,CAAnB,CDMuB,CAACe,CCNDT,ODMT,ECNkB,CAACb,KAAV,GAAkB,CAAzC,GAA6C,KAAKA,KAAL,GAAa,CAA1E;ACCA,AFMM,AILN,AHDA,AEAA,AJAA,SGAKG,AECA0B,AHDAzB,AEAAE,AJAAL,MAAL,EGAA,ADAA,AEAA,CJAc,EGAE0B,ADAAd,AEAA,AJAhB,CKCA,GFDoB,AECA,CFDCe,AECrB,IHDyB,CAACtB,CCAV,MAAiBT,CDAjB,CAAmBW,CAAnB,GAAuB,GCAG,EDAEP,CCAC,KAAKD,ADAX,GAAc,CAArD,CCAgB,CAAhB;AACA,AGUJ,ADRI,AHFA,AEAEO,AJAF,IMUAM,EFVEN,CAAC,EDAEH,AEEAqB,AHFAA,AEAA5B,AJAAK,IMUT,ENVI,EGAA,AEEA,AHFA,CEAc,AJAA,CAAd,CGAgB,AEEA,AHFA,CCAC,AEEjB,AHFA,AEAiB,EDAjB,GCAsBF,KAAjB,GAAyBH,SAAS,GAAG,CAD1B;ADEhB,AFKI,AKKR,ADRI,AHDA,AEDEW,AJAF,IMUAwC,EFVExC,CAAC,EDAEqB,AEEAvB,AHDAA,AEDA,AJAAH,ECKI,GGLCF,GHKN,AIHJ,AHDA,AFDA,GMUJ,ADRoB,AHDA,AFDAJ,CGAhB,GAAoB,CAApB,IHAyB,GAAG,CAAZ,GAAgB,KAAKG,KAAL,GAAa,CAA7C;AGCA,AFKI,AKKR,ADRMO,AHDAA,AEJc,AJGhB,IMUA0C,CFbA,CCKE1C,AHDAA,CGCC,AHDA,ECDEuB,AEEA,AHDA,AFDA1B,ECKI,GKKb,ADRcD,AHDAA,GFDV,GAAgBL,EKCA,AHDA,CDKZ,EELJ,GAAwB,CAAxB,CHA0B,GAAG,KAAKG,MAAlB,GAA2B,EAA3C;AGCA,AFKM,AKKV,ADRMO,AHDAA,AEDH,AJAC,IMUA0C,EDRE1C,AHDAA,CGCC,AHDA,ECDEuB,AEEA,AHDA,AFDA1B,GCKK,CAACW,CIHDZ,AHDAA,KISK,EHVf,CGUkB,EHVE,EGUxB,CNVI,CCK0B,EAApB,ADLoB,CAA1B,CCK8BS,CEL9B,QFKuC,CAACU,SAAV;AEH9B,AFIM,AKKV,ADXoB,AHDA,AFGhB,IMSAxB,CDXA,AHDA,ICGK0B,AHAAnB,CMSC,GAAG,IHTT,AHAA,CMSJ,EHToB,AHAA,CGAhB;AAEA,AGQJ,ADRG,AHDA,AFAGC,IMSF4C,ENTE5C,CAAC,EGCED,AHDA,KAAKH,GGCV,GAAgB,EGQE,ANVF,GMUK,IAAzB;AHPMI,AFEE,AKMR,ANTMC,IMSF4C,EHRE7C,AHDAC,CGCC,AHDA,EGCE,AHDA,ECGI,GEFCL,AHDAC,GCGN,KEHY,EGSI,GAAG,IAA3B;AHPMI,AFEIO,AKMV,ANZoB,IMYhBsC,CNZA,CGIE7C,CAAC,CFEGO,CEFD,KAAKX,GFEK,OKMK,CFZjBK,EEYoB,GFZf,EEYZ;AHVoB,AFKV,AKMV,AFZIA,AJGD,IMSC6C,CHXA,CCDA7C,GAAG,CAACyB,IAAJ,GAAW,SEYW,GAAG,IFZzB,CEYJ;AHPG,AGQH,AFZIzB,IDMF,AGME8C,EFZA9C,GAAG,CAACC,IEYM,GAAG,EFZb,CEYJ,EFZoB,GFCbD,KAAK,CEDR,ECEW;AFKb,AFDM,AKOR,ADVI,AHDAA,AEDAA,IEYA2B,EJXA3B,AEDAA,GFCG,AEDA,CFCCC,AEDAyB,CCECN,ICUM,GAAG,AFZd,CEYJ,AJXI,GAAgB,CGChB,QHDA,KEDuB,KAAKI,YAA5B,GAA4C,KAAK3B,QAAL,CAAcC,CAA1D,EAA6D,KAAKD,QAAL,CAAcE,CAA3E;AHMM,AKOV,ADVG,AHDCC,AEDD,IEYC+C,EJXA/C,GAAG,CAACE,QIWU,AJXd,CAAa,EIWI,EAArB,CJXsBL,QAAL,CAAcC,CAA3B,EAA8B,KAAKD,QAAL,CAAcE,CAA5C,EAA+C,KAAKR,KAApD,EAA2D,KAAKC,MAAhE;ADbE,AKyBN,AJXG,IIWCwD,WAAW,GAAG,EAAlB,KNXOhD,KAAK;ACKP,AKOL,ANXIA,GChBA,CK2BAiD,ENXAjD,GAAG,CAACC,GMWK,GAAG,EAAhB,CNXI,GAAgB,MAAhB;ACMAO,AKMJ,ANXIR,ECKAQ,EKMAH,ENXAL,GAAG,CCKK,ADLJE,CCKKO,IKME,GAAG,ANXd,CAAa,CMWjB,EAEA,ENbsBZ,CKAfG,EJKH,AGPK2B,CHOqB,EILlB,ELAK,CAAc7B,CAA3B,CCKA,CDL8B,CCKK,GGPjB,CJEiBD,MCKAa,EDLL,CAAcX,CAA5C,CCKwC,CDLO,CCKH,IDLQR,KAApD,EAA2D,KAAKC,MAAhE;ACME,AILFQ,ADFA,AJED,MKACA,GAAG,CAAC8B,CDFCN,CHOKd,KAAK,CAACC,CILhB,GJKE,CGPF,GAAoBgB,GFCb,ICEI,ICHX;ADIA,AFII,AKORuB,ADZIlD,AHDA,AEDD,MCECA,GCYK,ADZF,CAAC+B,CFCCX,AFII,ACNJvB,EIcT,ADbI,CAAQ,IJKJ,CILSA,AHDb,CAAcE,CAAd,ECEA,EDFmB,EGCX,CAAcD,CAAtB,CHDwBkB,CGCC,KAAKnB,EHD9B,MGCyB,CAAcE,CAAvC,EAA0C,KAAK8B,MAA/C,EAAuD,CAAvD,EAA0D,IAAIX,IAAI,CAACc,EAAnE;AJMM3B,AILNL,AHDD,MGCCA,EJKMK,CILH,CAACJ,SJKa,AILjB,CJKkBS,EILF,GJKO,CAACC,IAAP,CAAX,AILN,GJKgCD,KAAK,CAACE,IAAN,KAAe,SAAzC;AEJN,AFKM,AKOV,ADZIZ,MAAAA,GCYKkD,ADZF,CFAC,AEAAjB,IAAJ,CFASb,GGYb,GAAqB,MHZb,GAAoB,CAAxB,AHDS,EGCkB;AACzB,AGYJhB,ADZC,ALDC,EMaFA,QNbM,CMaG,EHZAkB,CGYG,CNbDzB,GMaKV,KNbV,CAAcW,CGChB,AHDE,GGCkB,AHDA,CAAtB,EAAyB,KMaf,CHZR,AGYsBuC,UAAd,EAA0BC,WAA1B,CAAZ;AHXG,AFIG,AKQNE,ANbI,EMaJA,KHdE,KGcQ,CHZD,AHDA5C,EMaI,EHZA,EGYI2B,GHZCH,SHDd,EMaS,CHZA,AGYUiB,ANbO,CAAC,EGCE,CAAxB,EAA2B,AHDA5C,IMavB,CAAb,CNbI;AGEA,AFII,AKQR,ANbG,MMaCU,OHZKmB,OGYT,CAAiBlB,IHZb,GAAoB,EGYxB,EAA4BC,KHZxB,MGYJ,EAAyCC,SAAzC,EAAoDC,eAApD;AHXG,AFFC,AKeJ4C,ANdC,EMcDA,QAAQ,mBDdC;AFER,AFIE,AKSJ,ADdG,ECgBJ,CLnBI,QIGKtD,QAAL,CAAcE,CAAd,IAAmB,KAAKiB,QAAxB;AJMD,AILA;gC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","file":"main.1e43358e.js","sourceRoot":"..","sourcesContent":["export default class SpaceShip {\n  constructor(gameWidth, gameHeight, paused) {\n    this.gameWidth = gameWidth;\n    this.gameHeight = gameHeight;\n    this.width = 70;\n    this.height = 20;\n    this.xSpeed = 7;\n    this.initialX = gameWidth / 2 - this.width / 2;\n    this.initialY = gameHeight - this.height - 10;\n    this.horizontalVelocity = 0;\n\n    this.position = {\n      x: this.initialX,\n      y: this.initialY\n    };\n  }\n\n  draw(ctx) {\n    ctx.fillStyle = \"#00f\";\n    ctx.fillRect(this.position.x, this.position.y, this.width, this.height);\n  }\n\n  moveLeft() {\n    if (this.position.x > 0) {\n      this.horizontalVelocity = -this.xSpeed;\n    }\n  }\n  moveRight() {\n    if (this.position.x < this.gameWidth - this.width) {\n      this.horizontalVelocity = this.xSpeed;\n    }\n  }\n\n  resetPosition() {\n    this.position = {\n      x: this.initialX,\n      y: this.initialY\n    };\n    this.horizontalVelocity = 0;\n  }\n\n  update() {\n    this.position.x += this.horizontalVelocity;\n    if (this.position.x < 0 || this.position.x > this.gameWidth - this.width) this.horizontalVelocity = 0;\n  }\n}\n","export default class InputHandler {\n  constructor(spaceShip, keysPressed, pauseGame, currentlyPaused) {\n    document.addEventListener(\"keydown\", event => {\n      switch (event.code) {\n        case \"Space\":\n          // so you can move while you shoot\n          keysPressed[event.code] = event.type === \"keydown\";\n          break;\n        case \"KeyA\":\n        case \"ArrowLeft\":\n          if (!currentlyPaused()) spaceShip.moveLeft();\n          break;\n        case \"KeyD\":\n        case \"ArrowRight\":\n          if (!currentlyPaused()) spaceShip.moveRight();\n          break;\n        case \"KeyP\":\n          pauseGame();\n          break;\n        default:\n          break;\n      }\n    });\n\n    document.addEventListener(\"keyup\", event => {\n      switch (event.code) {\n        case \"Space\":\n          keysPressed[event.code] = event.type === \"keydown\";\n          break;\n        default:\n          break;\n      }\n    });\n  }\n}\n","export default class Projectile {\n  constructor(spaceShip) {\n    this.width = 10;\n    this.height = 10;\n    this.initialX = spaceShip.position.x + spaceShip.width / 2 - this.width / 2;\n    this.initialY = spaceShip.position.y - this.height / 2;\n    this.velocity = 4;\n\n    this.position = {\n      x: this.initialX,\n      y: this.initialY\n    };\n  }\n\n  draw(ctx) {\n    ctx.fillStyle = \"#b3194a\";\n    ctx.fillRect(this.position.x, this.position.y, this.width, this.height);\n  }\n\n  update() {\n    this.position.y -= this.velocity;\n  }\n}\n","export default class Enemy {\n  constructor(gameWidth, gameHeight) {\n    this.width = 60;\n    this.height = 60;\n    // spawn enemy in random x position above the screen\n    this.initialX = Math.random() * (gameWidth - this.width);\n    this.initialY = -20;\n    this.healthPoints = 3;\n    this.pointsForKilling = 5;\n    this.currentColor = \"#32CD32\";\n\n    this.velocity = 1;\n\n    this.position = {\n      x: this.initialX,\n      y: this.initialY\n    };\n  }\n\n  // fire everytime enemy is supposed to take damage,\n  // for base enemy this will change their color depending on current health\n  takeDamage() {\n    this.healthPoints--;\n    if (this.healthPoints < 2) {\n      this.currentColor = \"#ff0000\";\n    } else if (this.healthPoints < 3) {\n      this.currentColor = \"#ffff00\";\n    }\n  }\n\n  draw(ctx) {\n    ctx.fillStyle = this.currentColor;\n    ctx.fillRect(this.position.x, this.position.y, this.width, this.height);\n  }\n\n  update() {\n    this.position.y += this.velocity;\n  }\n}\n","export default class Score {\n  constructor(gameWidth) {\n    this.width = 100;\n    this.height = 50;\n    this.currentScore = 0;\n    this.position = {\n      x: gameWidth - this.width - gameWidth / 7,\n      y: this.height\n    };\n  }\n\n  draw(ctx) {\n    ctx.font = \"36px dank mono\";\n    ctx.fillStyle = \"#0000ff\";\n    ctx.fillText(`Score: ${this.currentScore}`, this.position.x, this.position.y);\n  }\n\n  update(playerScore) {\n    this.currentScore = playerScore;\n  }\n}\n","export default class PowerUp {\n  constructor(gameWidth) {\n    this.radius = 20;\n\n    this.initialX = Math.random() * (gameWidth - this.radius);\n    this.initialY = -20;\n    this.healthPoints = 3;\n\n    this.velocity = 1;\n    this.position = {\n      x: this.initialX,\n      y: this.initialY\n    };\n  }\n\n  takeDamage() {\n    this.healthPoints--;\n  }\n\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.arc(this.position.x, this.position.y, this.radius, 0, 2 * Math.PI);\n    ctx.fillStyle = \"#ff00a9\";\n    ctx.fill();\n  }\n\n  update() {\n    this.position.y += this.velocity;\n  }\n}\n","import SpaceShip from \"/src/spaceShip\";\nimport InputHandler from \"/src/input\";\nimport Projectile from \"/src/projectile\";\nimport Enemy from \"/src/enemy\";\nimport Score from \"/src/score\";\nimport PowerUp from \"/src/powerup\";\n\n// create canvas\nlet canvas = document.getElementById(\"gameScreen\");\nlet ctx = canvas.getContext(\"2d\");\n\n// game constants\nconst GAME_WIDTH = 800;\nconst GAME_HEIGHT = 600;\n\n// game variables\nlet spaceShip;\nlet startingGameTime;\nlet scoreBoard;\nlet shootingAllowed = true;\nlet paused = false;\nlet enemySpawnInterval = 2000;\nlet timeToSpawnNextEnemy = 2000;\nlet powerUpSpawnInterval = 15000;\nlet timeToSpawnNextPowerUp = 15000;\nlet reloadTime = 300;\nlet playerScore = 0;\nlet projectileList = [];\nlet powerUpList = [];\nlet enemyList = [];\nlet keysPressed = {};\n\n// triggers game start\nstartGame();\n// start the game\nfunction startGame() {\n  spaceShip = new SpaceShip(GAME_WIDTH, GAME_HEIGHT);\n  scoreBoard = new Score(GAME_WIDTH);\n  new InputHandler(spaceShip, keysPressed, pauseGame, currentlyPaused);\n\n  gameLoop();\n}\n\n//function for handling rules around bullets\nfunction handleBullets() {\n  // Listen for if space key is held down instead of key down event\n  // this solves a bug where shooting will stop when moving while holding space\n  if (keysPressed[\"Space\"]) {\n    // only allow shots when reload time is finished\n    if (shootingAllowed) {\n      shootProjectile();\n      shootingAllowed = false;\n      setTimeout(() => {\n        shootingAllowed = true;\n      }, reloadTime);\n    }\n  }\n\n  if (projectileList) {\n    for (let i = 0; i < projectileList.length; i++) {\n      // if collision with an enemy is detected, this projectile will be removed from\n      // the projectileList to remove it from the game.\n      if (checkForCollisionWithEnemy(projectileList[i])) {\n        projectileList.splice(i, 1);\n        i--;\n        continue;\n      }\n\n      // this if statement is the memory cleanup of the bullet list\n      // whenever a bullet leaves the screen it will be cleaned up from arr\n      if (projectileList[i].position.y < 0) {\n        projectileList.splice(i, 1);\n        i--;\n        continue;\n      }\n      projectileList[i].draw(ctx);\n      projectileList[i].update();\n    }\n  }\n}\n\n// handling collision detection between projectile and enemy\nfunction checkForCollisionWithEnemy(projectile) {\n  for (let i = 0; i < enemyList.length; i++) {\n    // check vertical values first, if there is no overlap there is no point in checking x values\n    let enemyY = enemyList[i].position.y;\n    let projectileY = projectile.position.y;\n    if (projectileY + projectile.height > enemyY && projectileY < enemyY + enemyList[i].height) {\n      let enemyX = enemyList[i].position.x;\n      let projectileX = projectile.position.x;\n      if (projectileX + projectile.width > enemyX && projectileX < enemyX + enemyList[i].width) {\n        // if a collision is detected, lower that enemies health by 1\n        enemyList[i].takeDamage();\n        // after health is lowered, check if that enemy is out of health,\n        // if they are remove them from the enemy array and player gets points\n        if (enemyList[i].healthPoints === 0) {\n          playerScore += enemyList[i].pointsForKilling;\n          enemyList.splice(i, 1);\n        }\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n// function for handling rules around enemies\nfunction handleEnemies() {\n  if (enemyList) {\n    // garbage collection process similar to bullets. When enemies leave the viewport they will be cleaned\n    // up from memory\n    for (let i = 0; i < enemyList.length; i++) {\n      if (enemyList[i].position.y > GAME_HEIGHT) {\n        enemyList.splice(i, 1);\n        i--;\n        continue;\n      }\n\n      enemyList[i].draw(ctx);\n      enemyList[i].update();\n    }\n  }\n}\n\n// all things powerups go here\nfunction handlePowerups() {\n  if (powerUpList) {\n    for (let i = 0; i < powerUpList.length; i++) {\n      // if player doesn't kill powerup before it leaves screen.. it's gone!\n      if (powerUpList[i].position.y > GAME_HEIGHT) {\n        powerUpList.splice(i, 1);\n        i--;\n        continue;\n      }\n      console.log(powerUpList[i]);\n\n      powerUpList[i].draw(ctx);\n      powerUpList[i].update();\n    }\n  }\n}\n\n// bullet creation\nlet shootProjectile = () => {\n  projectileList.push(new Projectile(spaceShip));\n};\n\n// Everytime gameloop runs it will check if enough time has ellapsed to spawn the next enemy\nlet maybeSpawnEnemy = (currentTime, startingGameTime) => {\n  if (!paused) {\n    if (currentTime - startingGameTime > timeToSpawnNextEnemy) {\n      spawnEnemy();\n      timeToSpawnNextEnemy = currentTime + enemySpawnInterval;\n    }\n  }\n};\n\n// Check every game loop if it's time to spawn the next powerup\nlet maybeSpawnPowerUp = (currentTime, startingGameTime) => {\n  if (!paused) {\n    if (currentTime - startingGameTime > timeToSpawnNextPowerUp) {\n      spawnPowerUp();\n      timeToSpawnNextPowerUp = currentTime + powerUpSpawnInterval;\n    }\n  }\n};\n\n// add enemy to enemies list to spawn new enemy\nlet spawnEnemy = () => {\n  enemyList.push(new Enemy(GAME_WIDTH, GAME_HEIGHT));\n};\n\n// add powerup to list to spawn new powerup object\nlet spawnPowerUp = () => {\n  powerUpList.push(new PowerUp(GAME_WIDTH));\n};\n\n// call to toggle paused state\nfunction pauseGame() {\n  paused = !paused;\n}\n\n// check if game is currently paused, use to give objects knowledge of pause state\nfunction currentlyPaused() {\n  return paused;\n}\n\n// main game loop\nfunction gameLoop(timestamp) {\n  //when the game begins set the starting game time\n  if (!startingGameTime) {\n    startingGameTime = timestamp;\n  } else {\n    maybeSpawnEnemy(timestamp, startingGameTime);\n    maybeSpawnPowerUp(timestamp, startingGameTime);\n  }\n  // clear canvas between every render\n\n  // don't do any of normal updates if game is currently paused\n  if (!paused) {\n    ctx.clearRect(0, 0, GAME_WIDTH, GAME_HEIGHT);\n\n    // handle spaceShip updates\n    spaceShip.draw(ctx);\n    spaceShip.update();\n\n    // handle bullet updates\n    handleBullets();\n\n    // handle enemy updates\n    handleEnemies();\n\n    // handle powerups\n    handlePowerups();\n\n    // canvas has no z index, to avoid using clipping methods, if score is drawn last it\n    // will appear above the other objects passing through it\n    scoreBoard.update(playerScore);\n    scoreBoard.draw(ctx);\n  }\n\n  requestAnimationFrame(gameLoop);\n}\n"]}